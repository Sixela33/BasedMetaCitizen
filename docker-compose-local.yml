services:
  # Database
  postgres:
    image: postgres:16
    container_name: meta_citizen_postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: meta_citizen_backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PORT=8000
      - SUMSUB_SECRET_KEY=${SUMSUB_SECRET_KEY}
      - SUMSUB_PUBLIC_KEY=${SUMSUB_PUBLIC_KEY}
      - BLOCKCHAIN_RPC_URL=${BLOCKCHAIN_RPC_URL}
      - BLOCKCHAIN_PRIVATE_KEY=${BLOCKCHAIN_PRIVATE_KEY}
      - IDENTITY_FACTORY_ADDRESS=${IDENTITY_FACTORY_ADDRESS}
      - PRIVY_APP_ID=${PRIVY_APP_ID}
      - PRIVY_SECRET_KEY=${PRIVY_SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
        - NEXT_PUBLIC_PRIVY_APP_ID=${NEXT_PUBLIC_PRIVY_APP_ID}
        - NEXT_PUBLIC_GATEWAY_URL=${NEXT_PUBLIC_GATEWAY_URL}
        - PINATA_JWT=${PINATA_JWT}
        - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
    container_name: meta_citizen_frontend
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_PRIVY_APP_ID=${NEXT_PUBLIC_PRIVY_APP_ID}
      - NEXT_PUBLIC_GATEWAY_URL=${NEXT_PUBLIC_GATEWAY_URL}
      - PINATA_JWT=${PINATA_JWT}
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
    depends_on:
      - backend
    restart: unless-stopped

  # Caddy Reverse Proxy
  caddy:
    image: caddy:latest
    container_name: meta_citizen_caddy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./CaddyFile:/etc/caddy/Caddyfile
      - caddy_data:/data
    environment:
      - SITE_DOMAIN=https://localhost
      - API_DOMAIN=https://localhost/api
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  caddy_data: